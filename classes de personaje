package javonesymazmorras;

public class Ladron extends Personaje {
    private boolean invisible;

    public Ladron(String nombre, int nivel, int puntosVida) {
        super(nombre, nivel, puntosVida);
        this.invisible = false;
    }

    public void robar() {
        if (invisible) {
            System.out.println(nombre + " roba sin ser visto!");
        } else {
            System.out.println(nombre + " intenta robar, pero lo descubren!");
        }
    }

    public void hacerseInvisible() {
        invisible = !invisible;
    }

    public boolean estaInvisible() {
        return invisible;
    }
}

package javonesymazmorras;

public class Mago extends Personaje {
    private int mana;

    public Mago(String nombre, int nivel, int puntosVida, int mana) {
        super(nombre, nivel, puntosVida);
        this.mana = mana;
    }

    public void lanzarHechizo(int costoMana) {
        if (mana >= costoMana) {
            mana -= costoMana;
            System.out.println(nombre + " lanz칩 un hechizo!");
        } else {
            System.out.println(nombre + " no tiene suficiente man치!");
        }
    }

    public void recargarMana(int cantidad) {
        mana += cantidad;
    }

    public int getMana() {
        return mana;
    }
}



package javonesymazmorras;

public class Guerrero extends Personaje {
    private boolean proteger;
    private Personaje protegido;

    public Guerrero(String nombre, int nivel, int puntosVida) {
        super(nombre, nivel, puntosVida);
        this.proteger = false;
    }

    public void proteger(Personaje companero) {
        if (proteger) {
            System.out.println(nombre + " ya est치s protegeiendo a alguien!");
        } else {
            proteger = true;
            protegido = companero;
            System.out.println(nombre + " est치 protegiendo a " + companero.nombre);
        }
    }

    public void dejarDeProteger() {
        proteger = false;
        protegido = null;
    }

   
    public void bajarVida(int vida) {
        if (proteger && protegido != null) {
            protegido.bajarVida(vida / 2);
            super.bajarVida(vida / 2);
        } else {
            super.bajarVida(vida);
        }
    }
}
